#!/usr/bin/env python3

import sys
import socket
import random

HOST = 'challs.studsec.nl'
PORT = 7600

p = 0xDF9F081EDD11D342318B5D9044461CC8FEBE87BA75CD058342042DA7D91837B51021B37D4CEC31351BD8B372AE38341406F96426EDBA983F2B6AAD25B232365B0FC056F8E2D9F52091C19874B4F3581AFA940AB313CF4BAB054FD83C371CEAF95A06CCC8A866C8AEA7A00A7D9024ACCFA4153EEE86A6EF3D664A9B1C5FE169DD64FD1C7986380D34B9363AEBE8BE570C0D8F0F5D4003B85B2E7CE6CDA8948596212C70D4AC1A3AB92DEECA1BD4B3ABD4C6D1754960220DA77BA9C5B9800E2B0606CEDF9ECC3B5A3ADF28ED6449DB0F718F944D334353E0F907913497EB179DAE4AE0C99B426AE4ECE260FE96C380446B7D41C0942F07E70F08180ABC812AE48AB0F9B18C65E4F5B1AA9341CAC53E481DA5A11737C160EB971FE10102D3951B57DF88009470A875FB9D91C93E2DD9568A6BF529573EB142C766BE429C97772FCCFD40A4B596EA232F9D56FA18A5BADBCD4374801326F8516C5A50440C87E6D088A8C96767F3A7A374AFD9B053709550886EEEC81BD6E0D35851F5E0CA3D33E8E7CEA034045727E43E3E125963F536C3EC869A0FC994417C0E4E6D2623BF5395BD9E37F958FC3D068C5254A525CF8617C602E1605DB53D8E99F18015F0CEDD931D7C17F1BEAC9D90159EC69E80DDEFB7514065A992D9145F27AFE5E2E48FAE3E9E3E581D41BF47E9614D96446FC5E806FC8E95F436F84C5EFE789511F4823A15ADE0B42F88858C001E52F0A5ADAA5EF8C54D8B3C7ED32A9B45A6E314A821C04FD79AA2CCF4C2D6B97750CBF89E31C199EA558F27CB28ABD0864A7B952EA990E4CA6052275B7CCE04446D00570154DCAAF9A704DC3D74EA3E2F3D0C2736C160BF8875B1CA7D9443C9E350BBC80514F
g = 0x05

h1 = 0x
h2 = 0x77615EFAED70DCEB0C47FDF159C01C3A8F63E2CE2BC6CF1C6BEA315401F80CAA1666E6AB8FE36CD73516CBCB3DCFEDE15F5E95DF36CAF8F45DC8FB23E91BB2E71C569036C2C08D858F43B69E99DB5DB2D367137430199EFA9F45DD56787AB4E15F5B5F952EA30D82BC472F4E00C94B155491CB9257B2B248B8CA2CEDB3006F597E26285A3379281D296C04D6157E9C206CE7B7220346A958384A513B35B3BD03D77B0ACDA72B6F9DEB5E6339C3DC811D3A0E197F996A7BCC058D3D8B749D92934EDAEA3F120BA75AECAC2BADD8D847B22FCDCFF574B70B31D613EE680BB5F5B6C2AA5D62685E3A963AA0225A269A713DF836716C2D1B74E9C4675DB5107C3767A33783252335EE1858FBFA18781485B5B5578EE7680B795AFBC2BB61D185262E423576622F9407DA5935A1D2AFECEEA980CEC98F324C02DBCE4922F671327FE405CBE612CDED0A41E2C50AC16A585F58B460C6B0F49022846132D9B973AAC6BF5591C6BD1531FC443412457A115B9577B6E3C1684F136F9DBD076FA27D9EEDFA292B6639A706FF22B1F55539CEC4FD446BF887AFA37559D8D74C3E8378842DC1ABD1C1903C508BE2CECD17F7AB14E34DFED74143E83CD4073B61930050633CC56045E51CAF4EAA497B8B2C9DABCC26685E1987160153ED694DDEDD8669966289B5F76740940963BD1D5DAC225877D5051CFE4429F896204144AC99704FF8F6F08B8AC735B8CB18C5FD5D0B308BE28584D621F8C385D692BBBAE4472CC08C59B5D441DDBF40E06CB87572643D9327DF6D4D48A6F6D89E5FE3581DD36D271E7B1EF3FB25F2BCB1CA91B7A664461FC040D805E8C6C2356857BD3F0CDCC1ADFD09609F4B2879439FA0C41E1EDC8AF5B

known = input("Do you know x_1 or x_2? ")
if known in ["x_1", "x1", "1"]:
	x1 = int(input("What is x1 (in hex)? "), 16)

	if pow(g, x1, p) != h1:
		print("This doesn't match the public part.")
		sys.exit()

	with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
		sock.connect((HOST, PORT))

		c2 = random.randint(0, p-1)
		r2 = random.randint(0, p-1)
		u1 = random.randint(0, p-1)

		a1 = pow(g, u1, p)
		a2 = (pow(g, r2, p) * pow(h2, -c2 % (p-1), p)) % p

		sock.sendall((hex(a1) + ' ' + hex(a2)).encode('utf-8'))

		c = int(sock.recv(2048).decode('utf-8').strip(), 16)
		c1 = (c - c2) % (p-1)
		r1 = (u1 + c1 * x1) % (p-1)

		sock.sendall((hex(c1) + ' ' + hex(c2) + ' ' + hex(r1) + ' ' + hex(r2)).encode('utf-8'))

		print(sock.recv(4096))
elif known in ["x_2", "x2", "2"]:
	x2 = int(input("What is x2 (in hex)? "), 16)

	if pow(g, x2, p) != h2:
		print("This doesn't match the public part.")
		sys.exit()

	with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
		sock.connect((HOST, PORT))

		c1 = random.randint(0, p-1)
		r1 = random.randint(0, p-1)
		u2 = random.randint(0, p-1)

		a1 = (pow(g, r1, p) * pow(h1, -c1 % (p-1), p)) % p
		a2 = pow(g, u2, p)

		sock.sendall(hex(a1).encode('utf-8') + b' ' + hex(a2).encode('utf-8'))

		c = int(sock.recv(2048).decode('utf-8').strip(), 16)
		c2 = (c - c1) % (p-1)
		r2 = (u2 + c2 * x2) % (p-1)

		sock.sendall(hex(c1).encode('utf-8') + b' ' + hex(c2).encode('utf-8') + b' ' + hex(r1).encode('utf-8') + b' ' + hex(r2).encode('utf-8'))

		print(sock.recv(4096))
else:
	print("Choose either 1 or 2.")
